<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mwy.stock.reponstory.mapper.StockTimeInfoMapper">

    <update id="createTable">
        CREATE TABLE IF NOT EXISTS stock_time_info_${stockNum}
        (
            `id`            bigint(20)  NOT NULL AUTO_INCREMENT comment "主键",
            `stock_num`     varchar(10) NOT NULL comment "代码",
            `date`          date        NOT NULL comment "日期",
            `time`          varchar(20) NOT NULL comment "分钟",
            `price`         double(15, 5) default 0 comment "价格",
            `amount`        double(15, 5) default 0 comment "成交额",
            `volume`        double(15, 5) default 0 comment "成交量",
            `up_down_range` double(15, 5) default 0 comment "涨幅",
            `avg_price`     double(15, 5) default 0 comment "平均价格",
            PRIMARY KEY (`id`),
            KEY `date` (`date`)
        ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT ='分时表${stockNum}'
    </update>
    <delete id="deleteByTable">
        delete  from stock_time_info_${stockNum} where stock_num = #{stockNum}
        and date = #{date}
    </delete>
    <select id="abnormal" resultType="double">
        select max(volume)/avg(volume) from  stock_time_info_${stockNum} where stock_num = #{stockNum}
        and date in
        <foreach collection="dates" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <insert id="insertByTable">
        insert into  stock_time_info_${stockNum} (
            stock_num,date,time,price,amount,volume,up_down_range,avg_price
        )values(
        #{timeInfoDO.stockNum},
             #{timeInfoDO.date},
             #{timeInfoDO.time},
             #{timeInfoDO.price},
             #{timeInfoDO.amount},
             #{timeInfoDO.volume},
             #{timeInfoDO.upDownRange},
             #{timeInfoDO.avgPrice}
            )
    </insert>
    <insert id="insertByTables">
        insert into  stock_time_info_${stockNum} (
            stock_num,date,time,price,amount,volume,up_down_range,avg_price
        )values
             <foreach collection="timeInfoDOs" item="timeInfoDO" separator=",">
                 (
                 #{timeInfoDO.stockNum},
                 #{timeInfoDO.date},
                 #{timeInfoDO.time},
                 #{timeInfoDO.price},
                 #{timeInfoDO.amount},
                 #{timeInfoDO.volume},
                 #{timeInfoDO.upDownRange},
                 #{timeInfoDO.avgPrice}
                 )
             </foreach>
    </insert>

</mapper>